@model Projet_Web_Commerce.Models.PPClients
﻿﻿@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Data
@inject AuthDbContext _context
@inject UserManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> _userManager
@inject SignInManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> SignInManager
@using System.IO
@inject IWebHostEnvironment env
@{
    ViewData["Title"] = "Index";
    Console.WriteLine("ID OF CLIENT PANIER : " + Model.NoClient);
    var user = await _userManager.GetUserAsync(User);
    }
    @if (!SignInManager.IsSignedIn(User) || User.IsInRole("Client"))
    {
        Console.WriteLine("yes");
        <text>
            <script>
                debugger;
                window.location.href = '/PPProduits/ErrorProduit';
            </script>
        </text>
    }
    else
    {
        var vendeur = _context.PPVendeurs.FirstOrDefault(v => v.IdUtilisateur == user.Id);

    @if (vendeur == null)
    {
        Console.WriteLine("among us");
        <div>
            <p>Vous n'avez pas accès à cette page.</p>
            <a href="/PPProduits/ErrorProduit">Retourner à la catalogue</a>
        </div>
    }
    else
    {
        var clientProducts = _context.PPArticlesEnPanier
         .Where(p => p.NoVendeur == vendeur.NoVendeur && p.NoClient == Model.NoClient)
         .GroupBy(p => new { p.NoClient, p.NoProduit })
         .Select(g => new
         {
             NoClient = g.Key.NoClient,
             NoProduit = g.Key.NoProduit,
             TotalItems = g.Sum(p => p.NbItems),
             LowestPanierDate = g.Min(p => p.DateCreation)
         })
         .Join(
             _context.PPClients,
             cp => cp.NoClient,
             c => c.NoClient,
             (cp, c) => new
             {
                 cp.NoClient,
                 cp.NoProduit,
                 cp.TotalItems,
                 cp.LowestPanierDate,
                 c.Nom,
                 c.Prenom,
                 c.AdresseEmail
             }
         )
         .ToList();

        var oldestProductDatesPerClient = clientProducts
          .GroupBy(p => p.NoClient)
          .Select(g => new
          {
              NoClient = g.Key,
              OldestProductDate = g.Min(p => p.LowestPanierDate)
          })
          .ToList();
        var itemsPerClient = clientProducts
         .GroupBy(p => p.NoClient)
         .Select(g => new
         {
             NoClient = g.Key,
             TotalItems = g.Sum(p => p.TotalItems)
         })
         .ToList();



        if (Model.Nom != null && Model.Prenom != null)
        {
            <h1>Panier de @Model.Prenom @Model.Nom </h1>
        }
        else
        {
            <h1>Panier de @Model.AdresseEmail </h1>
        }
        <div class="container">
            <div class="row flex-wrap d-flex">
                <div class="col-md-6 d-flex">
                    <div class="d-flex flex-wrap align-content-start bg-light overflow-auto  " style="margin-bottom:50px; width:900px; height:600px;">
                        @foreach (var client in clientProducts)
                        {
                            var item = _context.PPProduits.FirstOrDefault(p => p.NoProduit == client.NoProduit);
                            var cat = _context.PPCategories.FirstOrDefault(p => p.NoCategorie == item.NoCategorie);
                            if (item != null)
                            {
                                <div class="card mb-1">
                                    <div class="card-body row d-flex ">
                                        <b>@Html.DisplayFor(modelItem => item.Nom) </b>
                                        @{
                                            var path = System.IO.Path.Combine(env.WebRootPath, "Logo", item.Photo);
                                            string imagePath = item.Photo != null && File.Exists(path) ? $"~/Logo/{item.Photo}" : "~/Logo/DefaultImage.png";
                                            Console.WriteLine("FILE Name : " + item.Photo);
                                            Console.WriteLine("FILE : " + File.Exists(path));
                                        }
                                        <div class="col-12 col-md-2 d-flex align-items-center justify-content-center">
                                            <img src="@Url.Content(imagePath)" alt="@item.Photo" width="100" height="120" />
                                        </div>
                                        <div class="col-12 col-md-2 d-flex align-items-center justify-content-center">
                                            <b>x @Html.DisplayFor(modelItem => client.TotalItems) </b>
                                        </div>
                                        <div class="col-12 col-md-2 d-flex align-items-center justify-content-center">
                                            <b>@Html.DisplayFor(modelItem => cat.Description) </b>
                                        </div>
                                        @if (item.PrixVente != null && item.DateVente > DateTime.Now)
                                        {
                                            var prix = item.PrixVente * client.TotalItems;
                                            <div class="col-12 col-md-3 d-flex align-items-center justify-content-center">
                                                <b>Prix Total: @Html.DisplayFor(modelItem => prix) $ </b>
                                            </div>
                                        }
                                        else
                                        {
                                            var prix = item.PrixDemande * client.TotalItems;
                                            <div class="col-12 col-md-3 d-flex align-items-center justify-content-center">
                                                <b>Prix Total: @Html.DisplayFor(modelItem => prix) $ </b>
                                            </div>
                                        }
                                        @{
                                            var poids = item.Poids * client.TotalItems;
                                        }
                                        <div class="col-12 col-md-3 d-flex align-items-center justify-content-center">
                                            <b>Poids Total: @Html.DisplayFor(modelItem => poids) Kg </b>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="col-md-6 d-flex">
                    <div class="d-flex flex-column align-items-start bg-light overflow-auto" style="margin-bottom:50px;  height:600px;">
                        @{
                            decimal? TotalPrice = 0;
                            decimal? TotalPoids = 0;
                            var oldestProductDate = oldestProductDatesPerClient.FirstOrDefault(c => c.NoClient == Model.NoClient)?.OldestProductDate;
                            var nbTotal = itemsPerClient.FirstOrDefault(c => c.NoClient == Model.NoClient)?.TotalItems;
                            foreach (var client in clientProducts)
                            {
                                var item = _context.PPProduits.FirstOrDefault(p => p.NoProduit == client.NoProduit);
                                if (item != null)
                                {
                                    decimal? prix = 0;
                                    if (item.PrixVente != null && item.DateVente > DateTime.Now)
                                    {
                                        prix = item.PrixVente * client.TotalItems;
                                    }
                                    else
                                    {
                                        prix = item.PrixDemande * client.TotalItems;
                                    }
                                    TotalPrice += prix;
                                    TotalPoids += item.Poids * client.TotalItems;
                                }
                            }
                        }
                        <h4 style="margin:5px;">Information sure le panier</h4>
                        <b style="margin:5px;">Prix Total : @Html.DisplayFor(modelItem => TotalPrice) $</b>
                        <b style="margin:5px;">Poids Total : @Html.DisplayFor(modelItem => TotalPoids) Kg</b>
                        <b style="margin:5px;">Date Création : @Html.DisplayFor(modelItem => oldestProductDate) </b>
                        <b style="margin:5px;">Nombre d'Items Total : @Html.DisplayFor(modelItem => nbTotal) </b>

                        @{
                            bool displayDestination = Model.Pays != null || Model.Province != null || Model.Ville != null || Model.Rue != null || Model.CodePostal != null;
                        }

                        @if (displayDestination)
                        {
                            <h4 style="margin:5px;">Destination</h4>

                            @if (Model.Pays != null)
                            {
                                <b style="margin:5px;">Pays : @Html.DisplayFor(modelItem => Model.Pays) </b>
                            }
                            @if (Model.Province != null)
                            {
                                <b style="margin:5px;">Province : @Html.DisplayFor(modelItem => Model.Province) </b>
                            }
                            @if (Model.Ville != null)
                            {
                                <b style="margin:5px;">Ville : @Html.DisplayFor(modelItem => Model.Ville)</b>
                            }
                            @if (Model.Rue != null)
                            {
                                <b style="margin:5px;">Rue : @Html.DisplayFor(modelItem => Model.Rue) </b>
                            }
                            @if (Model.CodePostal != null)
                            {
                                <b style="margin:5px;">Code Postal : @Html.DisplayFor(modelItem => Model.CodePostal) </b>
                            }
                        }


                    </div>
                </div>

            </div>
        </div>
        <div>
            @if (oldestProductDate != null && oldestProductDate < DateTime.Now.AddMonths(-6))
            {
                <a class="btn btn-danger" asp-action="DeletePanier" asp-route-id="@Model.NoClient">Supprimer</a>
                <text> | </text>
            }
            <a asp-action="ListePanier">Retour à la liste</a>

        </div>

    }
    }



