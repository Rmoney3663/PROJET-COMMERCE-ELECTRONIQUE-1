@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Data
@inject UserManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> _userManager
@inject SignInManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> SignInManager
@inject AuthDbContext _context
@model Projet_Web_Commerce.Models.PPProduits
@using System.IO
@inject IWebHostEnvironment env
@{
    ViewData["Title"] = "Details";
    var user = await _userManager.GetUserAsync(User);

    var vendeur = Model.PPVendeurs.NomAffaires;
}

@if (!SignInManager.IsSignedIn(User) )
{
    Console.WriteLine("yes");
    <div class="alert alert-warning" role="alert">
        Vous devez vous connecter avant de pouvoir voir les détails.
    </div>
    <text>
        <script>
            debugger;
            window.location.href = '/PPProduits/ErrorProduit';
        </script>
    </text>
}
else
{
    <h1>Détails</h1>

    <div>
        <h4>Produits</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Photo de l’article :
            </dt>
            @{
                var path = System.IO.Path.Combine(env.WebRootPath, "Logo", Model.Photo);
                string imagePath = Model.Photo != null && File.Exists(path) ? $"~/Logo/{Model.Photo}" : "~/Logo/DefaultImage.png";
                Console.WriteLine("FILE Name : " + Model.Photo);
                Console.WriteLine("FILE : " + File.Exists(path));
            }

            
            <dd class="col-sm-10">
                <img src="@Url.Content(imagePath)" alt="@Model.Photo" width="140" height="200" />
            </dd>

            <dt class="col-sm-2">
                Nom du produit :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Nom)
            </dd>

            <dt class="col-sm-2">
                Description plus élaborée :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt class="col-sm-2">
                Catégorie du produit :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PPCategories.Description)
            </dd>

            <dt class="col-sm-2">
                Prix demandé :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PrixDemande) $
            </dd>

            <dt class="col-sm-2">
                Disponible ?
            </dt>
            @if (@Model.Disponibilite == true)
            {
                <dd class="col-sm-10">
                    Oui
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    Non
                </dd>
            }

            <dt class="col-sm-2">
                Poids de l’article :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Poids) Kg
            </dd>

            <dt class="col-sm-2">
                Nombre d’items :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NombreItems)
            </dd>

            <dt class="col-sm-2">
                Prix de vente : 
            </dt>
            @if (Model.PrixVente != null)
            {
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.PrixVente) $
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    Le prix de vente n'est pas précisée
                </dd>
            }

            <dt class="col-sm-2">
                Date de vente :
            </dt>
            @if (Model.DateVente != null)
            {
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.DateVente) 
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    La date de vente n'est pas précisée
                </dd>
            }

            @if (User.IsInRole("Client"))
            {
                var client = _context.PPClients.Where(c => c.AdresseEmail == user.Email).FirstOrDefault();

                <form asp-controller="MainMenu" id="formAjoutPanier" asp-action="AjoutPanier" method="post">
                    <input type="hidden" name="NoProduit" value="@Model.NoProduit" />
                    <input type="hidden" name="NoClient" value="@client.NoClient" />
                    <input type="hidden" name="NoVendeur" value="@Model.NoVendeur" />
                    <button class="btn btn-secondary" type="submit">Ajouter au panier</button>
                    <select name="quantite">
                        @for (int i = 1; i <= Model.NombreItems && i < 21; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </form>
            }

        </dl>
    </div>
    <div>
        @if ( !User.IsInRole("Vendeur") && vendeur != null)
        {
            <a asp-controller="MainMenu" asp-route-nomAffaire="@vendeur" asp-action="CatalogueVendeur">Retour au catalogue du vendeur</a>

        }
        else
        {
            <a asp-action="Edit" asp-route-id="@Model?.NoProduit">Modifier</a>
            <text> | </text>
            <a asp-action="Index">Retour à la liste</a>
        }
    </div>
}