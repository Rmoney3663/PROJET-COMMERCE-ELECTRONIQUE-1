@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Data
@inject UserManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> _userManager
@inject SignInManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> SignInManager
@inject AuthDbContext _context
@model Projet_Web_Commerce.Models.PPProduits
@using System.IO
@inject IWebHostEnvironment env
@{
    ViewData["Title"] = "Details";
    var user = await _userManager.GetUserAsync(User);

    var vendeur = Model.PPVendeurs.NomAffaires;
    int numRating = 0;
}

@section scripts{
    <script type="text/javascript">
        function Etoiles(valeur) {
            document.getElementById("newRating").value=valeur + 1
            for (var i = 0; i < 5; i++){
                if (i <= valeur) {
                    document.getElementById(i.toString()).src = "/Logo/iconeEtoileJaune.png"
                }
                else {
                    document.getElementById(i.toString()).src = "/Logo/iconeEtoile.png"
                }
            }
        }
    </script>
}

<style>
    .evaluation {
        background-color: white;
        padding: 5px;
        margin-bottom: 10px;
        border-radius: 5px
    }
</style>

@if (!SignInManager.IsSignedIn(User) )
{
    Console.WriteLine("yes");
    <div class="alert alert-warning" role="alert">
        Vous devez vous connecter avant de pouvoir voir les détails.
    </div>
    <text>
        <script>
            debugger;
            window.location.href = '/PPProduits/ErrorProduit';
        </script>
    </text>
}
else
{
    <h1>Détails</h1>

    <div>
        <h4>Produits</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Photo de l’article :
            </dt>
            @{
                var path = System.IO.Path.Combine(env.WebRootPath, "Logo", Model.Photo);
                string imagePath = Model.Photo != null && File.Exists(path) ? $"~/Logo/{Model.Photo}" : "~/Logo/DefaultImage.png";
                Console.WriteLine("FILE Name : " + Model.Photo);
                Console.WriteLine("FILE : " + File.Exists(path));
                PPClients client = null;
            }

            
            <dd class="col-sm-10">
                <img src="@Url.Content(imagePath)" alt="@Model.Photo" width="140" height="200" />
            </dd>

            <dt class="col-sm-2">
                Nom du produit :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Nom)
            </dd>

            <dt class="col-sm-2">
                Description plus élaborée :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt class="col-sm-2">
                Catégorie du produit :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PPCategories.Description)
            </dd>

            <dt class="col-sm-2">
                Prix demandé :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PrixDemande) $
            </dd>

            <dt class="col-sm-2">
                Disponible ?
            </dt>
            @if (@Model.Disponibilite == true)
            {
                <dd class="col-sm-10">
                    Oui
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    Non
                </dd>
            }

            <dt class="col-sm-2">
                Poids de l’article :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Poids) Kg
            </dd>

            <dt class="col-sm-2">
                Nombre d’items :
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NombreItems)
            </dd>

            <dt class="col-sm-2">
                Prix de vente : 
            </dt>
            @if (Model.PrixVente != null)
            {
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.PrixVente) $
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    Le prix de vente n'est pas précisée
                </dd>
            }

            <dt class="col-sm-2">
                Date de vente :
            </dt>
            @if (Model.DateVente != null)
            {
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.DateVente) 
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    La date de vente n'est pas précisée
                </dd>
            }

            @if (User.IsInRole("Client"))
            {
                client = _context.PPClients.Where(c => c.AdresseEmail == user.Email).FirstOrDefault();

                <form asp-controller="MainMenu" id="formAjoutPanier" asp-action="AjoutPanier" method="post">
                    <input type="hidden" name="NoProduit" value="@Model.NoProduit" />
                    <input type="hidden" name="NoClient" value="@client.NoClient" />
                    <input type="hidden" name="NoVendeur" value="@Model.NoVendeur" />
                    <button class="btn btn-secondary" type="submit">Ajouter au panier</button>
                    <select name="quantite">
                        @for (int i = 1; i <= Model.NombreItems && i < 21; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </form>
            }

        </dl>
    </div>
    <div>
        @if ( !User.IsInRole("Vendeur") && vendeur != null)
        {
            <a asp-controller="MainMenu" asp-route-nomAffaire="@vendeur" asp-action="CatalogueVendeur">Retour au catalogue du vendeur</a>

        }
        else
        {
            <a asp-action="Edit" asp-route-id="@Model?.NoProduit">Modifier</a>
            <text> | </text>
            <a asp-action="Index">Retour à la liste</a>
        }
    </div>

    client = _context.PPClients.Where(c => c.AdresseEmail == user.Email).FirstOrDefault();
    var lstReview = _context.PPEvaluations.ToList();
    bool trouve = false;
    PPEvaluations evalClientActu = null;

    @if (User.IsInRole("Client"))
    {
        evalClientActu = _context.PPEvaluations.Where(e => e.NoClient == client.NoClient && e.NoProduit == Model.NoProduit).FirstOrDefault();
    }


    if (evalClientActu != null)
    {
        trouve = true;
    }

    if (trouve)
    {
        numRating = (int)evalClientActu.Cote;
    }

    <div class="row">
        <div class="col-md-4">
            <h2>
                Évaluations pour @vendeur
            </h2>
            @if (trouve && User.IsInRole("Client"))
            {
                <h5>Modifier votre évaluation</h5>
            }
            else if (User.IsInRole("Client"))
            {
                <h5>Ajouter une évaluation</h5>
            }
            <div class="col">
                @if (User.IsInRole("Client"))
                {

                    @for (int i = 0; i < numRating; i++)
                    {
                        <button onclick="Etoiles(@i)" style="border: 0; background-color:transparent">
                            <img id="@i" src="~/Logo/iconeEtoileJaune.png" width="25" height="25" />
                        </button>
                    }
                    @for (int i = numRating; i < 5; i++)
                    {
                        <button onclick="Etoiles(@i)" style="border: 0; background-color:transparent">
                            <img id="@i" src="~/Logo/iconeEtoile.png" width="25" height="25" />
                        </button>
                    }
                    <br />
                    <form asp-route-id="@Model.NoProduit" asp-route-noClient="@client.NoClient" asp-route-eval="@trouve">
                        <input type="hidden" name="rating" id="newRating" />
                        @if (evalClientActu != null)
                        {
                            <textarea rows="4" cols="50" name="msg" placeholder="Modifier votre commentaire">@evalClientActu.Commentaire</textarea>
                            <button class="btn btn-secondary" style="background-color:#7C6992; color:#F9E547" type="submit">Modifier votre évaluation</button>
                        }
                        else
                        {
                            <textarea rows="4" cols="50" name="msg" placeholder="Ajouter un commentaire"></textarea>
                            <button class="btn btn-secondary" style="background-color:#7C6992; color:#F9E547" type="submit">Ajouter une évaluation</button>
                        }
                    </form>
                }
                <hr style="border-top: 3px solid gray" />
                <h3>Évaluations:</h3>
                @if (trouve)
                {
                    int cote = (int)evalClientActu.Cote;
                    <div class="evaluation">
                        <h6>
                            (Vous) @client.AdresseEmail
                            @for (int i = 0; i < cote; i++)
                            {
                                <img src="~/Logo/iconeEtoileJaune.png" width="15" height="15" />
                            }
                            @for (int i = cote; i < 5; i++)
                            {
                                <img src="~/Logo/iconeEtoile.png" width="15" height="15" />
                            } :
                        </h6>
                        @if (evalClientActu.Commentaire != "" && evalClientActu.Commentaire != null)
                        {
                            <p>@evalClientActu.Commentaire</p>
                        }
                        else
                        {
                            <p style="color:gray">Aucune commentaire</p>
                        }
                    </div>
                }

                @if (lstReview.Count > 0)
                {
                    @foreach (var review in User.IsInRole("Client") ? lstReview.Where(r => r.NoClient != client.NoClient && r.NoProduit == Model.NoProduit) : lstReview)
                    {
                        var unClient = _context.PPClients.Where(c => c.NoClient == review.NoClient).FirstOrDefault();

                        int cote = (int)review.Cote;

                        <div class="evaluation">
                            <h6>
                                @unClient.AdresseEmail
                                @for (int i = 0; i < cote; i++)
                                {
                                    <img src="~/Logo/iconeEtoileJaune.png" width="15" height="15" />
                                }
                                @for (int i = cote; i < 5; i++)
                                {
                                    <img src="~/Logo/iconeEtoile.png" width="15" height="15" />
                                } :
                            </h6>
                            @if (review.Commentaire != "" && review.Commentaire != null)
                            {
                                <p>@review.Commentaire</p>
                            }
                            else
                            {
                                <p>Aucun commentaire</p>
                            }
                        </div>
                    }
                }
                else
                {
                    <h4>Aucune évaluations</h4>
                }
            </div>
        </div>
    </div>
}