@model IEnumerable<Projet_Web_Commerce.Models.PPProduits>
﻿﻿@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Data
@inject AuthDbContext _context
@inject UserManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> _userManager
@inject SignInManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> SignInManager
@using System.IO
@inject IWebHostEnvironment env
@{
    ViewData["Title"] = "Index";
    var user = await _userManager.GetUserAsync(User);
    }
    @if (!SignInManager.IsSignedIn(User) || User.IsInRole("Client"))
    {
        Console.WriteLine("yes");
        <text>
            <script>
                debugger;
                window.location.href = '/PPProduits/ErrorProduit';
            </script>
        </text>
    }
    else
    {
        var vendeur = _context.PPVendeurs.FirstOrDefault(v => v.IdUtilisateur == user.Id);

    @if (vendeur == null)
    {
        Console.WriteLine("among us");
        <div>
            <p>Vous n'avez pas accès à cette page.</p>
            <a href="/PPProduits/ErrorProduit">Retourner à la catalogue</a>
        </div>
    }
    else
    {
        ViewBag.Current = vendeur.NomAffaires;

        var text = "#000000";
        var background = "#ECEBF3";
        var textCard = "#000000";
        var backgroundCard = "#FFFFFF";
        var font = "Arial";
        var logo = "none";

        var config = vendeur.Configuration;

        if (config != null)
        {
            var listParams = config.Split(';');

            if (listParams.Length == 18)
            {
                text = listParams[0];
                background = listParams[1];
                textCard = listParams[2];
                backgroundCard = listParams[3];
                font = listParams[14];
                logo = listParams[15];
            }
        }

        var sortedModel = _context.PPProduits.Where(p => p.NoVendeur == vendeur.NoVendeur).ToList();

        <div class="col-md-4 d-flex align-items-start" style="gap:10px">
            <h1 style="color:@text;font-family:@font">Liste de produits</h1>

            @if (logo != "none")
            {
                <img src="~/data/images/@logo" alt="@logo" width="40" height="40" />
            }
            </div>

        <p>
            <a asp-action="Create">Ajouter Nouveau</a>
        </p>
        <div class="d-flex flex-wrap align-content-start" style="margin-bottom:50px;background-color:@background;font-family:@font">
            @foreach (var item in sortedModel)
            {
                <div class="card" style="width:320px; margin: 10px;background-color:@backgroundCard">
                    @{
                        var nomImage = item.Photo != null ? item.Photo : "DefaultImage.png";
                        var path = System.IO.Path.Combine(env.WebRootPath, "data/images", nomImage);
                        string imagePath = item.Photo != null && File.Exists(path) ? $"~/data/images/{item.Photo}" : "~/data/images/DefaultImage.png";
                        Console.WriteLine("FILE Name : " + item.Photo);
                        Console.WriteLine("FILE : " + File.Exists(path));
                    }

                    <img src="@Url.Content(imagePath)" alt="@item.Photo" width="320" height="400" />
                    <div class="card-body">
                        <p class="card-text" style="color:@textCard">
                            <b>Nom :</b>
                            @Html.DisplayFor(modelItem => item.Nom)
                        </p>
                        <p class="card-text" style="color:@textCard">
                            <b>Prix :</b>
                            @Html.DisplayFor(modelItem => item.PrixDemande)
                        </p>
                        <p class="card-text" style="color:@textCard">
                            <b>Categorie :</b>
                            @Html.DisplayFor(modelItem => item.PPCategories.Description)
                        </p>
                        <p class="card-text" style="color:@textCard">
                            <b>Nombre d'Items :</b>
                            @Html.DisplayFor(modelItem => item.NombreItems)
                        </p>
                        <p class="card-text" style="color:@textCard">
                            <b>Disponible :</b>
                            @{
                                if (item.Disponibilite)
                                {
                                    <text>oui</text>
                                }
                                else
                                {
                                    <text>non</text>
                                }
                            }
                        </p>
                        @if (_context.PPEvaluations.Where(e=>e.NoProduit == item.NoProduit).ToList().Count > 0)
                        {
                            <b>@System.Math.Round(_context.PPEvaluations.Where(e => e.NoProduit == item.NoProduit).Average(a => a.Cote), 2) étoiles!</b>
                        }
                        else
                        {
                            <b>Aucune évaluations!</b>
                        }
                        <div style="margin-top:10px">
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.NoProduit">Modifier</a>
                            <a> | </a>
                            <a class="btn btn-success" asp-action="Details" asp-route-id="@item.NoProduit">Details</a>
                            <a> | </a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.NoProduit">Supprimer</a>

                        </div>
                    </div>
                </div>
            }
        </div>
    }
    } 



