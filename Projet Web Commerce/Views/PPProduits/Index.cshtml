@model IEnumerable<Projet_Web_Commerce.Models.PPProduits>
﻿﻿@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Data
@inject AuthDbContext _context
@inject UserManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> _userManager
@inject SignInManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> SignInManager

@{
    ViewData["Title"] = "Index";
    var user = await _userManager.GetUserAsync(User);
    @if (!SignInManager.IsSignedIn(User) || User.IsInRole("Client"))
    {
        Console.WriteLine("yes");
        <text>
            <script>
                debugger;
                window.location.href = '/PPProduits/ErrorProduit';
            </script>
        </text>
    }
    var vendeur = _context.PPVendeurs.FirstOrDefault(v => v.IdUtilisateur == user.Id);  
}

@if (vendeur == null)
{
    Console.WriteLine("among us");
    <div>
        <p>Vous n'avez pas accès à cette page.</p>
        <a href="/PPProduits/ErrorProduit">Retourner à la catalogue</a>
    </div>
}
else
{
    var sortedModel = _context.PPProduits.Where(p => p.NoVendeur == vendeur.NoVendeur).ToList();

    <h1>Liste de produits</h1>

    <p>
        <a asp-action="Create">Ajouter Nouveau</a>
    </p>
    <div class="d-flex flex-wrap align-content-start bg-light" style="margin-bottom:50px">
        @foreach (var item in sortedModel)
        {
            <div class="card" style="width:320px; margin: 10px;">
                <img src="~/Logo/@(item.Photo)" alt="./Logo/@(item.Photo)" width="320" height="400" />
                <div class="card-body">
                    <p class="card-text">
                        <b>Nom :</b>
                        @Html.DisplayFor(modelItem => item.Nom)
                    </p>
                    <p class="card-text">
                        <b>Prix :</b>
                        @Html.DisplayFor(modelItem => item.PrixDemande)
                    </p>
                    <p class="card-text">
                        <b>Categorie :</b>
                        @Html.DisplayFor(modelItem => item.PPCategories.Description)
                    </p>
                    <p class="card-text">
                        <b>Nombre d'Items :</b>
                        @Html.DisplayFor(modelItem => item.NombreItems)
                    </p>
                    <p class="card-text">
                        <b>Disponible :</b>
                        @{
                            if (item.Disponibilite)
                            {
                                <text>oui</text>
                            }
                            else
                            {
                                <text>non</text>
                            }
                        }
                    </p>
                    <div>
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.NoProduit">Modifier</a>
                        <a> | </a>
                        <a class="btn btn-success" asp-action="Details" asp-route-id="@item.NoProduit">Details</a>
                        <a> | </a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.NoProduit">Supprimer</a>
                
                    </div>
                </div>
            </div>   
        }
    </div>
}
