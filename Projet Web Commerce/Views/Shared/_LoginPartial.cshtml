@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Areas.Identity.Data
@using Projet_Web_Commerce.Data

@inject AuthDbContext _context

@inject SignInManager<Utilisateur> SignInManager
@inject UserManager<Utilisateur> UserManager

<div id="snackbar">Nouvelle notification de la messagerie</div>
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            var courrielUser = await UserManager.GetEmailAsync(user);
            bool estDansRole = await UserManager.IsInRoleAsync(user, "Client");
            var statutVendeur = 0;
            var nom = "none";
            var prenom = "none";
            @if ((estDansRole = await UserManager.IsInRoleAsync(user, "Client")))
            {
                nom = _context.PPClients.Where(v => v.AdresseEmail == user.UserName).FirstOrDefault().Nom;
                prenom = _context.PPClients.Where(v => v.AdresseEmail == user.UserName).FirstOrDefault().Prenom;
            }
            else if ((estDansRole = await UserManager.IsInRoleAsync(user, "Vendeur")))
            {
                if (_context.PPVendeurs.FirstOrDefault(v => v.AdresseEmail == courrielUser).Statut == 1)
                {
                    statutVendeur = 1;
                    nom = _context.PPVendeurs.Where(v => v.AdresseEmail == user.UserName).FirstOrDefault().Nom;
                    prenom = _context.PPVendeurs.Where(v => v.AdresseEmail == user.UserName).FirstOrDefault().Prenom;
                }
            }

            @if (nom != "none" && prenom != "none" && nom != null && prenom != null && nom != "" && prenom != "" && !(estDansRole = await UserManager.IsInRoleAsync(user, "Gestionnaire")))
            {
                <li class="nav-item">
                    <p id="nom" class="nav-link" style="color: rgb(249, 229, 71)">Bonjour @prenom @nom!</p>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <p id="nom" class="nav-link" style="color: rgb(249, 229, 71)">Bonjour!</p>
                </li>
            }

            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="Messagerie" asp-action="BoiteDeReception" title="Messagerie">
                    <img style="width: 30px; height: 30px; filter: invert(87%) sepia(71%) saturate(1210%) hue-rotate(322deg) brightness(113%) contrast(95%)" src="/data/images/MessageIcon.png" />
                </a>
                <b id="notificationCount" style="color:red; position:absolute; top:10px; left:30px "></b>
            </li>

            if ((estDansRole = await UserManager.IsInRoleAsync(user, "Client")))
            {
                var userId = _context.PPClients.Where(v => v.AdresseEmail == user.UserName).FirstOrDefault().NoClient;
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="Paniers" asp-action="Index" title="Panier">
                        <div style="position: relative; top:0px; left:0px">
                            <img style="position:relative; width: 30px; height: 30px; filter: invert(87%) sepia(71%) saturate(1210%) hue-rotate(322deg) brightness(113%) contrast(95%)" src="/data/images/PanierIcon.png" />
                            @if (_context.PPArticlesEnPanier.Where(v=>v.NoClient == userId).ToList().Count > 0){
                                var listArticlesEnPanier = _context.PPArticlesEnPanier.Where(v => v.NoClient == userId).ToList();
                                var tot = 0;
                                foreach (var article in listArticlesEnPanier)
                                {
                                    tot += article.NbItems;
                                }
                                <b style="color:red; position:absolute; top:10px; left:30px ">@tot</b>
                            }
                        </div>
                    </a>
                </li>
            }
            <li class="nav-item">
                @if ((estDansRole = await UserManager.IsInRoleAsync(user, "Client")))
                {
                    <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/ProfilClient" title="Profil">
                        <img style="width: 30px; height: 30px; filter: invert(87%) sepia(71%) saturate(1210%) hue-rotate(322deg) brightness(113%) contrast(95%)" src="/data/images/ProfileIcon.png" />
                    </a>
                }
                else if ((estDansRole = await UserManager.IsInRoleAsync(user, "Vendeur")) && statutVendeur == 1)
                {
                    <a id="manage" class="nav-link" style="color: rgb(249, 229, 71)" asp-area="Identity" asp-page="/Account/Manage/ProfilVendeur" title="Profil">
                        <img style="width: 30px; height: 30px; filter: invert(87%) sepia(71%) saturate(1210%) hue-rotate(322deg) brightness(113%) contrast(95%)" src="/data/images/ProfileIcon.png" />
                    </a>
                }

            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" style="color: rgb(249, 229, 71)" class="nav-link btn btn-link border-0">Déconnexion</button>
                </form>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
                <a class="nav-link" style="color: rgb(249, 229, 71)" id="register" asp-area="Identity" asp-page="/Account/Register">Inscription</a>
        </li>
        <li class="nav-item">
                <a class="nav-link" style="color: rgb(249, 229, 71)" id="login" asp-area="Identity" asp-page="/Account/Login">Connexion</a>
        </li>
    }
</ul>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notifications")
        .build();

    connection.start().then(function () {
        console.log("SignalR Connected.");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("NotificationMessage", function () {
        // Handle the received notification here
        console.log("New notification received!");
        // You can update the UI, display a notification, etc.
        nouveauMessage();
    });

    function nouveauMessage() {
        var x = document.getElementById("snackbar");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
    }
</script>



<style>
#snackbar {
  visibility: hidden;
  min-width: 250px;
  margin-left: -125px;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 2px;
  padding: 16px;
  position: fixed;
  z-index: 1;
  left: 50%;
  bottom: 30px;
  font-size: 17px;
}

#snackbar.show {
  visibility: visible;
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

@@-webkit-keyframes fadein {
  from {bottom: 0; opacity: 0;} 
  to {bottom: 30px; opacity: 1;}
}

@@keyframes fadein {
  from {bottom: 0; opacity: 0;}
  to {bottom: 30px; opacity: 1;}
}

@@-webkit-keyframes fadeout {
  from {bottom: 30px; opacity: 1;} 
  to {bottom: 0; opacity: 0;}
}

@@keyframes fadeout {
  from {bottom: 30px; opacity: 1;}
  to {bottom: 0; opacity: 0;}
}
</style>
