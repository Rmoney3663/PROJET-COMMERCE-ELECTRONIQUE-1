@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Projet_Web_Commerce.Data;
@using Microsoft.AspNetCore.Hosting
@using System.IO
@inject IWebHostEnvironment env

@model Projet_Web_Commerce.Models.ModelCatalogueTous
@inject SignInManager<Projet_Web_Commerce.Areas.Identity.Data.Utilisateur> SignInManager
@inject AuthDbContext _context

@{
    var productList = SignInManager.IsSignedIn(User) ? Model.ProduitsList : Model.NouveauxProduits;
    var text = "#000000";
    var textCard = "#000000";
    var backgroundCard = "#FFFFFF";
    var recherche = "#7C6992";
    var textRecherche = "#FFFFFF";
    var backgroundButtonDetail = "#7C6992";
    var textButtonDetail = "#F9E547";
    var backgroundButtonAjouter = "#808080";
    var textButtonAjouter = "#FFFFFF";
    var backgroundBarre = "#FFFFFF";
    var textBarre = "#000000";
    var backgroundQuantite = "#FFFFFF";
    var textQuantite = "#000000";
    var font = "Arial";
    var logo = "none";
}


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}



<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">


<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>



<div class="row-fluid">
            @if (SignInManager.IsSignedIn(User))
            {


        <div class="col-md-4 d-flex align-items-start" style="gap:10px">
            @if (Model.searchString != null)
            {
                <h3 style="color:@text; font-family:@font">Résultats de recherche pour @Model.searchString </h3>
            }
            else
            {
                <h3 style="color:@text; font-family:@font">Catalogue de tous les vendeurs </h3>

            }
            

            @if (logo != "none")
            {
                <img src="~/data/images/@logo" alt="@logo" width="40" height="40" />
            }
                </div>

        @using (Html.BeginForm("CatalogueTous", "MainMenu", FormMethod.Post, new { id = "mainForm" }))
                {
                    <div class="row" style="font-family:@font">
                        <div class="col-md-4 d-flex align-items-start">

                            <div class="flex-grow-1">
                                <div class="input-group" style="width:400px;">
                                   
                            @Html.TextBoxFor(model => model.searchString, new { placeholder = "Rechercher par Nom, description ou no de produit", @class = "form-control", @style="background-color:" + backgroundBarre + ";color:" + textBarre })

                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            <i class="bi bi-search"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3" style="text-align: center;">
                    <a href="#" class="show-options-link" style="color:@recherche; font-weight: bold; text-decoration: none; transition: color 0.3s">Afficher plus d'options +</a>
                        </div>


                        <div class="col-md-2">
                            <select asp-for="sortOrder" asp-items="@Model.sortOrderOptions" class="form-select btn-secondary" style="background-color: @recherche;color:@textRecherche;" onchange="this.form.submit()"></select>
                        </div>
                        <div class="col-md-3">

                    <button type="submit" style="background-color: @recherche;color:@textRecherche" class="btn btn-secondary">Rechercher</button>

                            <div class="float-end">
                                <select asp-for="parPage" asp-items="@Model.parPageOptions" class="form-select btn-secondary" style="background-color: @recherche;color:@textRecherche; width:100px" onchange="this.form.submit()"></select>
                            </div>
                        </div>

                    </div>

            <div class="row toggle-container" style="font-family:@font; display: none;">
                        <div class="col-md-4" style="padding-top: 20px;">

                            <div class="row" style="padding-left: 15px;">
                                <div class="col">
                            <select asp-for="searchCat" asp-items="@Model.categorieOptions" class="btn btn-secondary" style="background-color: @recherche;color:@textRecherche; width: 100%;">
                                        <option value="">Catégorie</option>
                                    </select>
                                </div>
                            </div>

                        </div>
                        <div class="col-md-3" style="padding: 20px;">
                            <div style="margin-bottom: 20px;">
                                <div class="input-group date">
                            <input type="date" class="form-control" id="dateApres" name="dateApres" placeholder="Parue Après" style="padding-left: 15px; width: 200px; background-color:@recherche; color:@textRecherche" value="@Model.dateApres?.ToString("yyyy-MM-dd")">

                        </div>
                            </div>
                        </div>

                        <div class="col-md-3" style="padding: 20px;">
                            <div>
                                <div class="input-group date">
                            <input type="date" class="form-control" id="dateAvant" name="dateAvant" placeholder="Parue Avant" style="padding-left: 15px; width: 200px; background-color:@recherche; color:@textRecherche" value="@Model.dateAvant?.ToString("yyyy-MM-dd")">
                        </div>
                            </div>
                        </div>


                    </div>

                }
            }
            else
            {
                <h3>Liste des nouveaux produits </h3>
                <a asp-area="Identity" asp-page="/Account/Login">Cliquez ici pour devenir client et accéder à tout le catalogue du vendeur</a>
            }


    <div class="mt-4" style="font-family:@font">
        @if (Model != null && Model.ProduitsList.Any())
        {
            <div class="mt-4 row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-6">
                @foreach (var item in productList)
                {
                    <div class="col mb-4">
                        <div class="card h-100">
                            <div class="card-body d-flex flex-column" style="background-color:@backgroundCard; color:@textCard">
                                <h5 class="card-text" style="overflow: hidden; text-overflow: ellipsis; font-size: 17px;">@Html.DisplayFor(modelItem => item.Nom)</h5>
                                @if (!SignInManager.IsSignedIn(User))
                                {
                                    <h5 class="card-text float-end" style="color: orangered; font-size:15px">Nouveau !</h5>
                                }
                                @{
                                    var path = "";
                                    if (item.Photo != null)
                                    {
                                        path = System.IO.Path.Combine(env.WebRootPath, "data/images", item.Photo);
                                    }
                                    string imagePath = item.Photo != null && File.Exists(path) ? $"~/data/images/{item.Photo}" : "~/data/images/DefaultImage.png";
                                    Console.WriteLine("FILE Name : " + item.Photo);
                                    Console.WriteLine("FILE : " + File.Exists(path));
                                }
                                <div>
                                    <img src="@Url.Content(imagePath)" alt="@item.Photo" class="card-img-top" width="200" height="200" />
                                </div>
                                @{
                                    var category = Model.CategoriesList.FirstOrDefault(c => c.NoCategorie == item.NoCategorie);
                                }
                                <p class="card-text">Catégorie : @category.Description</p>
                                <p class="card-title">Numéro du produit : @Html.DisplayFor(modelItem => item.NoProduit)</p>
                                <p class="card-text">Items en Stock : @Html.DisplayFor(modelItem => item.NombreItems)</p>
                                @if (item.PrixVente != null && item.DateVente > DateTime.Now)
                                {
                                    <p class="card-text">
                                        Prix :
                                        <span style="text-decoration: line-through;">
                                            @Html.DisplayFor(modelItem => item.PrixDemande)
                                        </span>
                                        <span style="color: red; font-weight: bold;">
                                            @Html.DisplayFor(modelItem => item.PrixVente) $
                                        </span>
                                    </p>
                                }
                                else
                                {
                                    <p class="card-text">Prix : @Html.DisplayFor(modelItem => item.PrixDemande) $ </p>
                                }

                                @if (SignInManager.IsSignedIn(User) && User.IsInRole("Client") && item.NombreItems > 0)
                                {
                                    <form asp-controller="PPProduits" asp-route-first="oui" asp-route-id="@item.NoProduit" asp-action="Details">

                                        <input type="hidden" name="source" value="tous" />

                                        @Html.HiddenFor(m => m.searchString)
                                        @Html.HiddenFor(m => m.parPage)
                                        @Html.HiddenFor(m => m.searchCat)
                                        @Html.HiddenFor(m => m.pageNumber)
                                        @Html.HiddenFor(m => m.dateApres)
                                        @Html.HiddenFor(m => m.dateAvant)
                                        @Html.HiddenFor(m => m.sortOrder)

                                        <button type="submit" class="btn btn-secondary mt-auto" style="margin-bottom:10px; background-color:@backgroundButtonDetail; color: @textButtonDetail">Details</button>
                                    </form>
                                    <form asp-controller="MainMenu" id="formAjoutPanier" asp-action="AjoutPanier" method="post">
                                        <input type="hidden" name="NoProduit" value="@item.NoProduit" />
                                        <input type="hidden" name="NoClient" value="@Model.noClient" />
                                        <input type="hidden" name="NoVendeur" value="@item.NoVendeur" />
                                        <input type="hidden" name="source" value="tous" />

                                        @Html.HiddenFor(m => m.searchString)
                                        @Html.HiddenFor(m => m.parPage)
                                        @Html.HiddenFor(m => m.searchCat)
                                        @Html.HiddenFor(m => m.pageNumber)
                                        @Html.HiddenFor(m => m.dateApres)
                                        @Html.HiddenFor(m => m.dateAvant)
                                        @Html.HiddenFor(m => m.sortOrder)

                                        <br />
                                        <button class="btn btn-secondary" style="background-color:@backgroundButtonAjouter; color:@textButtonAjouter" type="submit">Ajouter au panier</button>
                                        <select name="quantite" style="background-color:@backgroundQuantite; color:@textQuantite">
                                            @for (int i = 1; i <= @item.NombreItems && i < 21; i++)
                                            {
                                                <option value="@i">@i</option>
                                            }
                                        </select>
                                    </form>
                                }
                                else if (SignInManager.IsSignedIn(User) && User.IsInRole("Client") && item.NombreItems == 0)
                                {
                                    <p style="color:red; font-weight:bold">En rupture de stock</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p>Aucun produits.</p>
        }
    </div>

    @if (SignInManager.IsSignedIn(User))
    {
        @if (Model.ProduitsList.Count > 0)
        {
            <div class="pagination">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (Model.ProduitsList.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("CatalogueTous", new {
    sortOrder = Model.sortOrder,
    pageNumber = Model.pageNumber - 1,
    parPage = Model.parPage,
    searchString = Model.searchString
})">Précédent</a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.ProduitsList.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.ProduitsList.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("CatalogueTous", new {
    sortOrder = Model.sortOrder,
    pageNumber = i,
    parPage = Model.parPage,
    searchString = Model.searchString
})">@i</a>
                            </li>
                        }

                        @if (Model.ProduitsList.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("CatalogueTous", new {
    sortOrder = Model.sortOrder,
    pageNumber = Model.ProduitsList.PageIndex + 1,
    parPage = Model.parPage,
    searchString = Model.searchString
})">Suivant</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    }




<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"></script>


<style>
    .dropdown-menu {
        max-height: 200px; 
        overflow-y: auto; 
    }

    a:hover {
        color: #ccc; 
    }

    input[type="date"]:before {
        content: attr(placeholder) !important;
        color: #aaa;
        margin-right: 0.5em;
    }

    input[type="date"]:focus:before,
    input[type="date"]:valid:before {
        content: "";
    }

    .row-fluid {
        margin-left: -100px;
        margin-right: -100px;
    }

    
</style>
@section Scripts
{
    <script>


        $(document).ready(function () {
            $('#vendeursListBox').mousedown(function (e) {
                e.preventDefault();

                var originalScrollTop = $(this).scrollTop();
                $(this).focus();
                $(this).mousemove(function (e2) {
                    $(this).scrollTop(originalScrollTop);
                    $(this).unbind("mousemove");
                });
            });

            $('#vendeursListBox option').mousedown(function (e) {
                e.preventDefault();
                $(this).prop('selected', !$(this).prop('selected'));
                return false;
            });

            $('.dropdown-menu').on('click', function (e) {
                e.stopPropagation();
            });


            $(document).ready(function () {
                var isContainerVisible = false; 

                $(".show-options-link").click(function () {
                    console.log("Clicked");
                    var toggleContainer = $(".toggle-container");
                    toggleContainer.animate({
                        height: 'toggle'
                    });

                    
                    isContainerVisible = !isContainerVisible;

                   
                    var linkText = isContainerVisible ? 'Diminuer' : 'Afficher plus d\'options +';
                    console.log("Link Text: ", linkText);
                    $(this).text(linkText);
                });
            });

        });
    </script>
}

