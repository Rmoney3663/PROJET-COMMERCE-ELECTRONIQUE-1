﻿﻿@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using Projet_Web_Commerce.Data
@using System.Globalization;
@inject AuthDbContext _context
@model PPMessages
@{
    ViewData["Title"] = "Message";
    CultureInfo cultureInfo = new CultureInfo("fr-FR");

    // string dateFormattee = Model.DateEnvoi.Date.ToString("d MMMM yyyy hh:mm");
    var auteur = _context.Users.FirstOrDefault(u => u.Id == Model.Auteur)?.Email;
    // var destinataires = _context.PPDestinatairesMessage
    //                              .Where(d => d.NoMessage == Model.NoMessage)
    //                              .Join(
    //                                  _context.Users, // La table des utilisateurs
    //                                  dest => dest.Destinataire, // La clé étrangère dans PPDestinatairesMessage
    //                                  user => user.Id, // La clé primaire dans Utilisateur
    //                                  (dest, user) => new
    //                                  {
    //                                      DestinataireEmail = user.Email,
    //                                  }
    //                              )
    //                              .ToList();
    var destinataires = Model.Destinataires
        .Where(d => d.NoMessage == Model.NoMessage)
        .ToList();

}

<style>

    .btns {
        width: 10%;
        height: 100%;
        color: rgb(124, 105, 146);
        background-color: rgb(236, 235, 243);
    }

        .btns:hover {
            color: rgb(249, 229, 71);
            background-color: rgb(124, 105, 146);
        }
</style>

<div class="row">
    <div class="col">
        <section>
            <div>
                @Html.Partial("MenuMessagerie", "")
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="card-title">@Model.Sujet</h2>
                    </div>
                    <hr />
                    <div class="d-flex justify-content-between align-items-center" style="font-size: 20px;">
                        <span>De: <b>@auteur</b></span> <!-- @Model.Auteur-->
                        <span class="ml-auto"><b>@Model.DateEnvoi</b></span>
                    </div>
                    <div style="font-size: 20px;">
                        À: @Html.Raw(string.Join(", ", destinataires.Select(destinataire => destinataire.DestinataireUser != null 
                            ? $"<strong>{destinataire.DestinataireUser.Email}</strong>" : "")))
                    </div>
                    <br />
                    <div style="white-space: pre-line;">
                        @Model.Message
                    </div>
                    <br />
                    @if (Model.PieceJointe != null)
                    {
                        <div class="form-floating mb-3" style="width:fit-content">
                            <a href="@Url.Action("TelechargerPieceJointe", "Messagerie", new { cheminFichier = Model.PieceJointe })" class="form-control">Télécharger la pièce jointe</a>
                            <label class="form-label">Pièce jointe</label>
                        </div>
                    }
                    <br />
                    @if (ViewBag.destinataire != null && ViewBag.destinataire.Statut == -1)
                    {
                        <div class="card-footer" style="height: 55px;">
                            <button class="btns" onclick="restaurer('@Model.NoMessage')">Restaurer</button>
                            <button class="btns" onclick="supprimerDef('@Model.NoMessage')">Supprimer</button>
                        </div>
                    }
                    else
                    {
                        <div class="card-footer" style="height: 55px;">
                            <button class="btns" onclick="repondre('@Model.NoMessage')">Répondre</button>
                            <button class="btns" onclick="transferer('@Model.NoMessage', '@ViewBag.UtilisateurCourantId')">Transférer</button>
                            @if (ViewBag.UtilisateurCourantId != Model.Auteur)
                            {
                                <button class="btns" onclick="supprimer('@Model.NoMessage')">Supprimer</button>
                            }
                        </div>
                    }
                </div>
            </div>

        </section>
    </div>
</div>

<script>
    function repondre(noMessage) {
        window.location.href = '@Url.Action("EnvoyerMessage")' + '?idMessage=' + noMessage + '&typeMessage=' + 'reponse';
    }

    function transferer(noMessage, transmetteur) {
        window.location.href = '@Url.Action("EnvoyerMessage")' + '?idMessage=' + noMessage + '&typeMessage=' + 'transmission' + '&transmetteur=' + transmetteur;
    }
    
    function supprimer(noMessage) {
        window.location.href = '@Url.Action("Supprimer")' + '?idMessage=' + noMessage;
    }

    function restaurer(noMessage) {
        window.location.href = '@Url.Action("Restaurer")' + '?idMessage=' + noMessage;
    }
    
    function supprimerDef(noMessage) {
        window.location.href = '@Url.Action("supprimerDefinitivement")' + '?idMessage=' + noMessage;
    }
</script>