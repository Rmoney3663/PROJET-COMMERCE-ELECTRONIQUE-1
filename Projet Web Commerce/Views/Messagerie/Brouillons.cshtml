﻿﻿@using Microsoft.AspNetCore.Identity
@using Projet_Web_Commerce.Data
@model List<PPMessages>
@inject AuthDbContext _context

@{
    ViewData["Title"] = "Brouillons";
}

<style>
    .truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 350px;
    }

    .truncateDest {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100px;
    }

    .msg {
        color: gray;
    }

    .flotter:hover {
        background-color: rgb(236, 235, 243);
        cursor: pointer;
    }
</style>

<div class="row">
    <div class="col">
        <section>
            <div>
                @Html.Partial("MenuMessagerie", "Brouillons")
            </div>
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title">@ViewData["Title"]</h2>
                    <hr />
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" style="padding-right: 0px">#</th>
                                <th scope="col" style="max-width: 50px;">Destinataire(s)</th>
                                <th scope="col">Objet - <span class="msg">Message</span></th>
                            </tr>
                        </thead>

                        <tbody>
                            @{
                                var no = 0;
                            }
                            @foreach (var msg in Model)
                            {
                                var idDestinataires = msg.Destinataires.Select(d => d.Destinataire);
                                <tr class="flotter" onclick="window.location.href = '@Url.Action("EnvoyerMessage", new { idMessage = msg.NoMessage })'">
                                    <td>@(++no)</td>
                                    <td class="truncateDest">
                                        @{
                                            var destinataires = idDestinataires
                                            .Select(dest => _context.Users.FirstOrDefault(u => u.Id == dest)?.Email)
                                            .Where(email => !string.IsNullOrWhiteSpace(email));

                                            var dests = string.Join(", ", destinataires);
                                        }
                                        @dests
                                    </td>
                                    <td class="truncate">@Html.DisplayFor(modelItem => msg.Sujet) - <span class="msg">@Html.DisplayFor(modelItem => msg.Message)</span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>
